# =============================================================
# .env.example - SEC-CC (organizado por serviço)
# Use este arquivo como base para criar o seu .env.
# Variáveis não usadas no momento estão comentadas para referência.
# =============================================================

# ========== CORE: PostgreSQL (DB relacional) ==========
POSTGRES_USER=sec
POSTGRES_PASSWORD=secpass2024
POSTGRES_DB=SEC
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# URL (async) para FastAPI
FASTAPI_DATABASE_URL=postgresql+asyncpg://sec:secpass2024@postgres:5432/SEC

# URL de conveniência (psycopg)
# POSTGRES_URL=postgresql+psycopg://sec:secpass2024@postgres:5432/SEC


# ========== CORE: Redis (cache) ==========
REDIS_PASSWORD=redispassword2024
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_URL=redis://:redispassword2024@redis:6379/0


# ========== CORE: RabbitMQ (mensageria AMQP) ==========
RABBITMQ_ADMIN_USER=admin
RABBITMQ_ADMIN_PASSWORD=admin123
RABBITMQ_VHOST=/
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672

# URL de conveniência
# RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672/


# ========== CORE: MongoDB (NoSQL de documentos) ==========
MONGO_INITDB_DATABASE=secmongo
MONGODB_HOST=mongodb
MONGODB_DB=secmongo
MONGODB_USER=secmongo
MONGODB_PASSWORD=mongopass2024
MONGODB_AUTH_SOURCE=admin
MONGODB_URL=mongodb://mongodb:27017/secmongo


# ========== BACKENDS ==========
# FastAPI (API v1) e NestJS (API v2)
NESTJS_PORT=3000
FASTAPI_LOG_LEVEL=info
CORS_ORIGINS=http://localhost:3000,http://localhost:5173


# ========== Segurança - JWT (FastAPI) ==========
JWT_SECRET_KEY=change-me-in-production
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_ALGORITHM=HS256


# ========== Admin / Bootstrap (SQL) ==========
ADMIN_NAME=ADMINISTRADOR DO SISTEMA
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=changeme123
DEFAULT_USER_PASSWORD=changeme123
CADASTRANTE_SYSTEM=SYSTEM
ADMIN_RESET_PASSWORD=changeme123


# ========== Observabilidade - Grafana ==========
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin2024
GF_USERS_ALLOW_SIGN_UP=false
GF_USERS_AUTO_ASSIGN_ORG=true
GF_USERS_AUTO_ASSIGN_ORG_ROLE=Admin


# ========== Observabilidade - Prometheus ==========
# PROMETHEUS_CONFIG_FILE=/etc/prometheus/prometheus.yml


# ========== Frontend e Proxy ==========
# FRONTEND_URL=http://localhost:3000
# CORS_ORIGINS=http://localhost:3000,http://localhost:5173


# ========== Logs e Aplicação ==========
# LOG_LEVEL=INFO
# STRUCTURED_LOGGING=true
# APP_NAME=SEC-CC
# APP_VERSION=4.0.0
# APP_ENVIRONMENT=development


# ========== Limites e Monitoramento ==========
# RATE_LIMIT_REQUESTS_PER_MINUTE=1000
# METRICS_ENABLED=true
# TRACING_ENABLED=true
# LOG_AGGREGATION_ENABLED=true


# ========== Integrações Externas e Dev ==========
# Jaeger
# JAEGER_AGENT_HOST=jaeger
# JAEGER_AGENT_PORT=6832

# Blockchain (placeholders)
# ETHEREUM_RPC_URL=https://mainnet.infura.io/v3/YOUR_PROJECT_ID
# SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
# APTOS_RPC_URL=https://fullnode.mainnet.aptoslabs.com/v1

# AI Services
OPENAI_API_KEY=your-openai-api-key-here
GEMINI_API_KEY=your-gemini-api-key-here
GOOGLE_API_KEY=your-google-api-key-here
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# n8n (presente no compose via NGINX em /n8n)
# N8N_HOST=localhost
# N8N_PORT=5678
# N8N_PROTOCOL=http
# N8N_BASE_URL=/n8n
# N8N_DIAGNOSTICS_ENABLED=false
# N8N_EXECUTIONS_MODE=regular
# N8N_EDITOR_BASE_URL=http://localhost/n8n/
# WEBHOOK_URL=http://localhost/n8n/
# N8N_ENCRYPTION_KEY=change-me-32-chars
# GENERIC_TIMEZONE=America/Sao_Paulo
# TZ=America/Sao_Paulo
# EXECUTIONS_DATA_SAVE_ON_SUCCESS=none
# EXECUTIONS_DATA_SAVE_ON_ERROR=all
# N8N_LOG_LEVEL=info
