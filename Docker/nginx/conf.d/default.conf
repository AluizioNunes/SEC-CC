server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    root /usr/share/nginx/html;
    resolver 127.0.0.11 ipv6=on valid=10s;

    set $frontend_upstream "frontend:80";
    set $fastapi_upstream "fastapi:8000";
    set $nestjs_upstream "nestjs:3000";

    # Página de status agregada
    location = /status {
        root /usr/share/nginx/html;
        try_files /status.html =404;
    }

    # Configuração para o frontend React (porta 80 no container)
    location / {
        proxy_pass http://$frontend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Configurações importantes para React Router
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support para hot reload (se necessário)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Configuração para a API FastAPI
    location /api/v1/ {
        rewrite ^/api/v1/(.*)$ /$1 break;
        proxy_pass http://$fastapi_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Configuração para a API NestJS
    location /api/v2/ {
        rewrite ^/api/v2/(.*)$ /$1 break;
        proxy_pass http://$nestjs_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}