# üöÄ VERS√ÉO ALTERNATIVA TEMPOR√ÅRIA - FRONTEND SIMPLIFICADO
# Esta configura√ß√£o usa nginx com HTML est√°tico para casos onde o build React falha

version: '3.8'

services:
  # Banco de dados essenciais
  postgres:
    image: postgres:17.6-alpine
    container_name: CC-POSTGRESQL
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sec}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secpass}
      POSTGRES_DB: ${POSTGRES_DB:-secdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sec_net
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: CC-MONGODB
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-secmongo}
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - sec_net
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: CC-REDIS
    ports:
      - "6379:6379"
    networks:
      - sec_net
    restart: unless-stopped

  # Backend APIs
  fastapi:
    build:
      context: ./Backend/FastAPI
      dockerfile: Dockerfile
    container_name: CC-FASTAPI
    ports:
      - "8000:8000"
    networks:
      - sec_net
    depends_on:
      - redis
      - postgres
      - mongodb
    restart: unless-stopped

  nestjs:
    build:
      context: ./Backend/NestJS
      dockerfile: Dockerfile
    container_name: CC-NESTJS
    environment:
      PORT: ${NESTJS_PORT:-3000}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT:-6379}
    ports:
      - "3000:3000"
    networks:
      - sec_net
    depends_on:
      - redis
    restart: unless-stopped

  # Frontend - Vers√£o simplificada com HTML est√°tico
  frontend:
    image: nginx:alpine
    container_name: CC-FRONTEND
    ports:
      - "5173:80"
    volumes:
      - ./fallback.html:/usr/share/nginx/html/index.html:ro
      - ./docker/frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - sec_net
    restart: unless-stopped

  # Proxy reverso
  nginx:
    image: nginx:alpine
    container_name: CC-NGINX
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - sec_net
    depends_on:
      - frontend
      - fastapi
      - nestjs
    restart: unless-stopped

networks:
  sec_net:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
