version: '3.8'

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: CC-NGINX
    ports:
      - "80:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - frontend

  # ========== FRONTEND REACT (APLICAÇÃO REAL) ==========
  frontend:
    build:
      context: ./
      dockerfile: Dockerfile.frontend
    container_name: CC-FRONTEND
    ports:
      - "5173:5173"  # ← Porta padrão do Vite
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========== REDIS CACHE ==========
  redis:
    image: redis:latest
    container_name: CC-REDIS
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword2024
    environment:
      - REDIS_PASSWORD=redispassword2024
    networks:
      - sec_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
  # ========== FASTAPI BACKEND ==========
  fastapi:
    build:
      context: ./Backend/FastAPI
      dockerfile: Dockerfile
    container_name: CC-FASTAPI
    ports:
      - "8000:8000"
    networks:
      - sec_net
    depends_on:
      - redis
    # Add time synchronization and health checks
    environment:
      - SERVICE_NAME=fastapi
      - HOST=fastapi
      - PORT=8000
      - POSTGRES_URL=postgresql://sec:secpass2024@postgres:5432/secdb
      - REDIS_URL=redis://:redispassword2024@redis:6379/0
      - JWT_SECRET_KEY=super-secret-jwt-key-change-in-production-2024
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  sec_net:
    driver: bridge
