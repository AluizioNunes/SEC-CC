services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - sec_net

  # fastapi:
  #   build:
  #     context: ./Backend/FastAPI
  #     dockerfile: Dockerfile
  #   environment:
  #     POSTGRES_URL: ${POSTGRES_URL}
  #     MONGODB_URL: ${MONGODB_URL}
  #     REDIS_URL: ${REDIS_URL}
  #     RABBITMQ_URL: ${RABBITMQ_URL}
  #     LOG_LEVEL: ${FASTAPI_LOG_LEVEL:-info}
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - sec_net

  # nestjs:
  #   build:
  #     context: ./Backend/NestJS
  #     dockerfile: Dockerfile
  #   environment:
  #     PORT: ${NESTJS_PORT:-3000}
  #     POSTGRES_URL: ${POSTGRES_URL}
  #     MONGODB_URL: ${MONGODB_URL}
  #     REDIS_URL: ${REDIS_URL}
  #     RABBITMQ_URL: ${RABBITMQ_URL}
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - sec_net

  postgres:
    image: postgres:17.6-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sec_net

  # mongodb:
  #   image: mongo:7.0-jammy
  #   environment:
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #   volumes:
  #     - mongo_data:/data/db
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - sec_net

  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   ports:
  #     - "5672:5672"   # AMQP
  #     - "15672:15672" # Management UI
  #   networks:
  #     - sec_net

  # n8n:
  #   image: n8nio/n8n:latest
  #   environment:
  #     N8N_HOST: ${N8N_HOST}
  #     N8N_PORT: ${N8N_PORT}
  #     N8N_PROTOCOL: ${N8N_PROTOCOL}
  #     N8N_BASE_URL: ${N8N_BASE_URL}
  #     N8N_DIAGNOSTICS_ENABLED: ${N8N_DIAGNOSTICS_ENABLED}
  #     EXECUTIONS_MODE: ${N8N_EXECUTIONS_MODE}
  #   ports:
  #     - "5678:5678"
  #   networks:
  #     - sec_net

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - sec_net

  # loki:
  #   image: grafana/loki:2.9.8
  #   command: ["-config.file=/etc/loki/config.yml"]
  #   volumes:
  #     - ./docker/loki/loki-config.yml:/etc/loki/config.yml:ro

  # promtail:
  #   image: grafana/promtail:2.9.8
  #   command: ["-config.file=/etc/promtail/config.yml"]
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./docker/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
  #   networks:
  #     - sec_net

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: ./docker/frontend/Dockerfile
  #   volumes:
  #     - frontend_dist:/app/dist
  #   networks:
  #     - sec_net

volumes:
  postgres_data:
  mongo_data:
  frontend_dist:
  nginx_config:

networks:
  sec_net:
    driver: bridge
