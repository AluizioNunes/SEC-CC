services:
  # Simplified FastAPI for testing
  fastapi:
    build:
      context: ./Backend/FastAPI
      dockerfile: Dockerfile
    container_name: CC-FASTAPI
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_URL=postgresql://sec:secpass2024@postgres:5432/secdb
      - REDIS_URL=redis://:redispassword2024@redis:6379/0
      - JWT_SECRET_KEY=super-secret-jwt-key-change-in-production-2024
      - LOG_LEVEL=INFO
    networks:
      - sec_net
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:17.6-alpine
    container_name: CC-POSTGRESQL
    environment:
      POSTGRES_USER: sec
      POSTGRES_PASSWORD: secpass2024
      POSTGRES_DB: secdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sec_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sec -d secdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:latest
    container_name: CC-REDIS
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword2024
    networks:
      - sec_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  sec_net:
    driver: bridge

volumes:
  postgres_data:
